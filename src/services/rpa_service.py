# src/services/rpa_service.py

import os
from playwright.sync_api import sync_playwright, TimeoutError
from dotenv import load_dotenv

# Carrega as vari√°veis de ambiente
load_dotenv()

def _handle_login(page):
    """
    Fun√ß√£o auxiliar para cuidar do fluxo de login, interagindo com o modal.
    """
    try:
        login_button_selector = "#login-link"
        page.wait_for_selector(login_button_selector, timeout=7000)
        
        print("üîç Bot√£o de Login encontrado. Clicando...")
        page.click(login_button_selector)

        continue_with_email_selector = "#email-login-button"
        print("-> Aguardando modal de login...")
        page.wait_for_selector(continue_with_email_selector)
        print("-> Clicando em 'Continue with email' dentro do modal...")
        page.click(continue_with_email_selector)

        email = os.getenv("LOVABLE_EMAIL")
        email_input_selector = "#email"
        page.wait_for_selector(email_input_selector)
        page.fill(email_input_selector, email)
        
        page.get_by_role("button", name="Continuar", exact=True).click()

        password = os.getenv("LOVABLE_PASSWORD")
        password_input_selector = "#password"
        page.wait_for_selector(password_input_selector)
        page.fill(password_input_selector, password)
        
        page.get_by_role("button", name="Login").click()
        
        print("‚úÖ Login realizado com sucesso!")
        page.wait_for_selector("#chatinput", timeout=30000)
        
    except TimeoutError:
        print("‚úÖ Sess√£o de login provavelmente j√° ativa (nenhum bot√£o de login encontrado).")
    except Exception as e:
        print(f"‚ùå Ocorreu um erro durante o login: {e}")
        raise e

def criar_prototipo_lovable(prompt: str, logo_path: str = None) -> str:
    """
    Usa o Playwright para fazer login, inserir o prompt, anexar um logo
    e extrair o link do prot√≥tipo.
    """
    link_prototipo = "Erro ao gerar prot√≥tipo."
    
    lovable_url = os.getenv("LOVABLE_URL")
    if not lovable_url:
        return "Erro: A vari√°vel LOVABLE_URL n√£o foi definida no arquivo .env"

    with sync_playwright() as p:
        browser = p.chromium.launch(headless=False)
        page = browser.new_page()
        
        try:
            print(f"ü§ñ Iniciando automa√ß√£o em {lovable_url}...")
            page.goto(lovable_url, timeout=60000)

            _handle_login(page)

            print("1. Inserindo o prompt na caixa de texto...")
            page.fill("#chatinput", prompt)
            print("‚úÖ Prompt inserido com sucesso.")

            if logo_path and os.path.exists(logo_path):
                print("2. Iniciando processo de anexo de arquivo...")
                try:
                    # --- L√ìGICA DE UPLOAD CORRIGIDA ---
                    
                    # Passo 1: Clica no bot√£o "Anexar" principal para abrir o modal
                    page.get_by_role("button", name="Anexar").click()
                    print("-> Modal de anexo aberto.")

                    # Passo 2: A janela de escolher arquivo S√ì VAI ABRIR depois do pr√≥ximo clique.
                    # Ent√£o, preparamos o "ouvinte" para ela agora.
                    with page.expect_file_chooser() as fc_info:
                        # Passo 3: Dentro do modal, clica em "Adicionar Arquivos".
                        # Esta a√ß√£o ir√° disparar a abertura da janela de sele√ß√£o de arquivos.
                        print("-> Clicando em 'Adicionar Arquivos' dentro do modal...")
                        page.get_by_role("button", name="Adicionar Arquivos").click()
                    
                    # Passo 4: Agora que a janela foi aberta e o "ouvinte" a capturou,
                    # podemos selecionar o arquivo.
                    file_chooser = fc_info.value
                    file_chooser.set_files(logo_path)
                    
                    print(f"‚úÖ Arquivo de logo '{logo_path}' selecionado com sucesso.")
                    # --- FIM DA L√ìGICA CORRIGIDA ---

                except Exception as e:
                    print(f"‚ö†Ô∏è N√£o foi poss√≠vel anexar o logo: {e}")
            
            print("3. Clicando no bot√£o de enviar...")
            page.click('#chatinput-send-message-button')
            print("‚è≥ Aguardando a gera√ß√£o do prot√≥tipo... Isso pode levar v√°rios minutos.")

            print("4. Aguardando o link de preview do prot√≥tipo...")
            preview_link_selector = 'a[href*="preview--"]'
            page.wait_for_selector(preview_link_selector, timeout=0)
            
            link_prototipo = page.get_attribute(preview_link_selector, 'href')

            print(f"‚úÖ Prot√≥tipo gerado com sucesso! Link: {link_prototipo}")

        except Exception as e:
            print(f"‚ùå Ocorreu um erro inesperado durante a automa√ß√£o: {e}")
            link_prototipo = f"Erro: {e}"
        finally:
            browser.close()
            
    return link_prototipo